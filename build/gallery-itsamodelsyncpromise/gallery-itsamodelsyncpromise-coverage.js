if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/gallery-itsamodelsyncpromise/gallery-itsamodelsyncpromise.js']) {
   __coverage__['build/gallery-itsamodelsyncpromise/gallery-itsamodelsyncpromise.js'] = {"path":"build/gallery-itsamodelsyncpromise/gallery-itsamodelsyncpromise.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":40},"end":{"line":1,"column":59}}},"2":{"name":"(anonymous_2)","line":80,"loc":{"start":{"line":80,"column":13},"end":{"line":80,"column":29}}},"3":{"name":"ITSAModelSyncPromise","line":90,"loc":{"start":{"line":90,"column":4},"end":{"line":90,"column":36}}},"4":{"name":"(anonymous_4)","line":108,"loc":{"start":{"line":108,"column":23},"end":{"line":108,"column":41}}},"5":{"name":"(anonymous_5)","line":112,"loc":{"start":{"line":112,"column":33},"end":{"line":112,"column":60}}},"6":{"name":"(anonymous_6)","line":113,"loc":{"start":{"line":113,"column":49},"end":{"line":113,"column":74}}},"7":{"name":"(anonymous_7)","line":156,"loc":{"start":{"line":156,"column":21},"end":{"line":156,"column":40}}},"8":{"name":"(anonymous_8)","line":160,"loc":{"start":{"line":160,"column":33},"end":{"line":160,"column":60}}},"9":{"name":"(anonymous_9)","line":161,"loc":{"start":{"line":161,"column":47},"end":{"line":161,"column":72}}},"10":{"name":"(anonymous_10)","line":209,"loc":{"start":{"line":209,"column":21},"end":{"line":209,"column":40}}},"11":{"name":"(anonymous_11)","line":213,"loc":{"start":{"line":213,"column":33},"end":{"line":213,"column":60}}},"12":{"name":"(anonymous_12)","line":218,"loc":{"start":{"line":218,"column":54},"end":{"line":218,"column":77}}},"13":{"name":"(anonymous_13)","line":225,"loc":{"start":{"line":225,"column":87},"end":{"line":225,"column":112}}},"14":{"name":"(anonymous_14)","line":270,"loc":{"start":{"line":270,"column":24},"end":{"line":270,"column":43}}},"15":{"name":"(anonymous_15)","line":274,"loc":{"start":{"line":274,"column":33},"end":{"line":274,"column":60}}},"16":{"name":"(anonymous_16)","line":275,"loc":{"start":{"line":275,"column":46},"end":{"line":275,"column":58}}},"17":{"name":"finish","line":276,"loc":{"start":{"line":276,"column":20},"end":{"line":276,"column":38}}},"18":{"name":"(anonymous_18)","line":277,"loc":{"start":{"line":277,"column":61},"end":{"line":277,"column":77}}},"19":{"name":"(anonymous_19)","line":282,"loc":{"start":{"line":282,"column":57},"end":{"line":282,"column":72}}},"20":{"name":"(anonymous_20)","line":303,"loc":{"start":{"line":303,"column":16},"end":{"line":303,"column":27}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":316,"column":133}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":13}},"3":{"start":{"line":31,"column":3},"end":{"line":86,"column":6}},"4":{"start":{"line":81,"column":8},"end":{"line":81,"column":19}},"5":{"start":{"line":82,"column":8},"end":{"line":84,"column":23}},"6":{"start":{"line":83,"column":12},"end":{"line":83,"column":41}},"7":{"start":{"line":85,"column":8},"end":{"line":85,"column":22}},"8":{"start":{"line":90,"column":4},"end":{"line":90,"column":38}},"9":{"start":{"line":91,"column":4},"end":{"line":310,"column":13}},"10":{"start":{"line":109,"column":12},"end":{"line":109,"column":32}},"11":{"start":{"line":111,"column":12},"end":{"line":111,"column":36}},"12":{"start":{"line":112,"column":12},"end":{"line":135,"column":15}},"13":{"start":{"line":113,"column":16},"end":{"line":134,"column":19}},"14":{"start":{"line":114,"column":20},"end":{"line":117,"column":26}},"15":{"start":{"line":118,"column":20},"end":{"line":133,"column":21}},"16":{"start":{"line":119,"column":24},"end":{"line":119,"column":43}},"17":{"start":{"line":120,"column":24},"end":{"line":120,"column":48}},"18":{"start":{"line":121,"column":24},"end":{"line":121,"column":57}},"19":{"start":{"line":122,"column":24},"end":{"line":122,"column":47}},"20":{"start":{"line":126,"column":24},"end":{"line":130,"column":25}},"21":{"start":{"line":127,"column":28},"end":{"line":129,"column":31}},"22":{"start":{"line":131,"column":24},"end":{"line":131,"column":58}},"23":{"start":{"line":132,"column":24},"end":{"line":132,"column":51}},"24":{"start":{"line":157,"column":12},"end":{"line":157,"column":32}},"25":{"start":{"line":159,"column":12},"end":{"line":159,"column":36}},"26":{"start":{"line":160,"column":12},"end":{"line":187,"column":15}},"27":{"start":{"line":161,"column":16},"end":{"line":186,"column":19}},"28":{"start":{"line":162,"column":20},"end":{"line":166,"column":26}},"29":{"start":{"line":167,"column":20},"end":{"line":185,"column":21}},"30":{"start":{"line":168,"column":24},"end":{"line":168,"column":43}},"31":{"start":{"line":169,"column":24},"end":{"line":169,"column":46}},"32":{"start":{"line":170,"column":24},"end":{"line":170,"column":57}},"33":{"start":{"line":171,"column":24},"end":{"line":171,"column":47}},"34":{"start":{"line":175,"column":24},"end":{"line":179,"column":25}},"35":{"start":{"line":176,"column":28},"end":{"line":178,"column":31}},"36":{"start":{"line":180,"column":24},"end":{"line":180,"column":66}},"37":{"start":{"line":181,"column":24},"end":{"line":181,"column":59}},"38":{"start":{"line":182,"column":24},"end":{"line":182,"column":46}},"39":{"start":{"line":183,"column":24},"end":{"line":183,"column":56}},"40":{"start":{"line":184,"column":24},"end":{"line":184,"column":51}},"41":{"start":{"line":210,"column":12},"end":{"line":210,"column":32}},"42":{"start":{"line":212,"column":12},"end":{"line":212,"column":36}},"43":{"start":{"line":213,"column":12},"end":{"line":250,"column":15}},"44":{"start":{"line":214,"column":16},"end":{"line":217,"column":22}},"45":{"start":{"line":218,"column":16},"end":{"line":249,"column":19}},"46":{"start":{"line":219,"column":20},"end":{"line":248,"column":21}},"47":{"start":{"line":220,"column":24},"end":{"line":220,"column":51}},"48":{"start":{"line":221,"column":24},"end":{"line":221,"column":57}},"49":{"start":{"line":222,"column":24},"end":{"line":222,"column":55}},"50":{"start":{"line":225,"column":24},"end":{"line":247,"column":27}},"51":{"start":{"line":226,"column":28},"end":{"line":226,"column":39}},"52":{"start":{"line":227,"column":28},"end":{"line":227,"column":55}},"53":{"start":{"line":228,"column":28},"end":{"line":246,"column":29}},"54":{"start":{"line":229,"column":32},"end":{"line":229,"column":51}},"55":{"start":{"line":230,"column":32},"end":{"line":230,"column":54}},"56":{"start":{"line":231,"column":32},"end":{"line":231,"column":65}},"57":{"start":{"line":232,"column":32},"end":{"line":232,"column":55}},"58":{"start":{"line":236,"column":32},"end":{"line":240,"column":33}},"59":{"start":{"line":237,"column":36},"end":{"line":239,"column":39}},"60":{"start":{"line":241,"column":32},"end":{"line":241,"column":74}},"61":{"start":{"line":242,"column":32},"end":{"line":242,"column":67}},"62":{"start":{"line":243,"column":32},"end":{"line":243,"column":54}},"63":{"start":{"line":244,"column":32},"end":{"line":244,"column":64}},"64":{"start":{"line":245,"column":32},"end":{"line":245,"column":59}},"65":{"start":{"line":271,"column":12},"end":{"line":271,"column":32}},"66":{"start":{"line":273,"column":12},"end":{"line":273,"column":36}},"67":{"start":{"line":274,"column":12},"end":{"line":307,"column":14}},"68":{"start":{"line":275,"column":16},"end":{"line":301,"column":19}},"69":{"start":{"line":276,"column":20},"end":{"line":280,"column":21}},"70":{"start":{"line":277,"column":24},"end":{"line":279,"column":27}},"71":{"start":{"line":278,"column":28},"end":{"line":278,"column":59}},"72":{"start":{"line":281,"column":20},"end":{"line":300,"column":21}},"73":{"start":{"line":282,"column":24},"end":{"line":296,"column":27}},"74":{"start":{"line":283,"column":28},"end":{"line":295,"column":29}},"75":{"start":{"line":284,"column":32},"end":{"line":288,"column":34}},"76":{"start":{"line":289,"column":32},"end":{"line":289,"column":65}},"77":{"start":{"line":290,"column":32},"end":{"line":290,"column":55}},"78":{"start":{"line":293,"column":32},"end":{"line":293,"column":41}},"79":{"start":{"line":294,"column":32},"end":{"line":294,"column":49}},"80":{"start":{"line":298,"column":24},"end":{"line":298,"column":33}},"81":{"start":{"line":299,"column":24},"end":{"line":299,"column":41}},"82":{"start":{"line":305,"column":20},"end":{"line":305,"column":62}},"83":{"start":{"line":312,"column":4},"end":{"line":312,"column":50}},"84":{"start":{"line":314,"column":4},"end":{"line":314,"column":48}}},"branchMap":{"1":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":22},"end":{"line":111,"column":29}},{"start":{"line":111,"column":33},"end":{"line":111,"column":35}}]},"2":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":20},"end":{"line":118,"column":20}},{"start":{"line":118,"column":20},"end":{"line":118,"column":20}}]},"3":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":24},"end":{"line":126,"column":24}},{"start":{"line":126,"column":24},"end":{"line":126,"column":24}}]},"4":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":22},"end":{"line":159,"column":29}},{"start":{"line":159,"column":33},"end":{"line":159,"column":35}}]},"5":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":20},"end":{"line":167,"column":20}},{"start":{"line":167,"column":20},"end":{"line":167,"column":20}}]},"6":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":24},"end":{"line":175,"column":24}},{"start":{"line":175,"column":24},"end":{"line":175,"column":24}}]},"7":{"line":212,"type":"binary-expr","locations":[{"start":{"line":212,"column":22},"end":{"line":212,"column":29}},{"start":{"line":212,"column":33},"end":{"line":212,"column":35}}]},"8":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":20},"end":{"line":219,"column":20}},{"start":{"line":219,"column":20},"end":{"line":219,"column":20}}]},"9":{"line":225,"type":"cond-expr","locations":[{"start":{"line":225,"column":57},"end":{"line":225,"column":65}},{"start":{"line":225,"column":68},"end":{"line":225,"column":76}}]},"10":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":28},"end":{"line":228,"column":28}},{"start":{"line":228,"column":28},"end":{"line":228,"column":28}}]},"11":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":32},"end":{"line":236,"column":32}},{"start":{"line":236,"column":32},"end":{"line":236,"column":32}}]},"12":{"line":273,"type":"binary-expr","locations":[{"start":{"line":273,"column":22},"end":{"line":273,"column":29}},{"start":{"line":273,"column":33},"end":{"line":273,"column":35}}]},"13":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":20},"end":{"line":281,"column":20}},{"start":{"line":281,"column":20},"end":{"line":281,"column":20}}]},"14":{"line":281,"type":"binary-expr","locations":[{"start":{"line":281,"column":24},"end":{"line":281,"column":38}},{"start":{"line":281,"column":42},"end":{"line":281,"column":59}}]},"15":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":28},"end":{"line":283,"column":28}},{"start":{"line":283,"column":28},"end":{"line":283,"column":28}}]}},"code":["(function () { YUI.add('gallery-itsamodelsyncpromise', function (Y, NAME) {","","'use strict';","","/**"," *"," * Extention ITSAModelSyncPromise"," *"," *"," * Extends Y.Model with Promised sync-methods. The synclayer can be made just as usual. But instead of calling"," * Model.load and Model.save and Model.destroy, you can use:"," *"," * <b>Model.loadPromise</b>"," * <b>Model.savePromise</b>"," * <b>Model.submitPromise</b>"," * <b>Model.destroyPromise</b>"," *"," * <b>The sync-layer MUST call the callback-function of its related promise-method, otherwise the promises are not resolved.</b>"," *"," * @module gallery-itsamodelsyncpromise"," * @extends Model"," * @class ITSAModelSyncPromise"," * @constructor"," * @since 0.1"," *"," * <i>Copyright (c) 2013 Marco Asbreuk - http://itsasbreuk.nl</i>"," * YUI BSD License - http://developer.yahoo.com/yui/license.html"," *","*/","","   var YArray = Y.Array,","   /**","     * Fired when an error occurs, such as when an attribute (or property) doesn't validate or when","     * the sync layer submit-function returns an error.","     * @event error","     * @param e {EventFacade} Event Facade including:","     * @param e.error {any} Error message.","     * @param e.src {String} Source of the error. May be one of the following (or any","     *                     custom error source defined by a Model subclass):","     *","     * `submit`: An error submitting the model from within a sync layer.","     *","     * `attributevalidation`: An error validating an attribute (or property). The attribute (or objectproperty)","     *                        that failed validation will be provided as the `attribute` property on the event facade.","     *","     * @param e.attribute {String} The attribute/property that failed validation.","     * @param e.validationerror {String} The errormessage in case of attribute-validation error.","    **/","    EVT_ERROR = 'error',","   /**","     * Fired after model is submitted from the sync layer.","     * @event submit","     * @param e {EventFacade} Event Facade including:","     * @param [e.options] {Object} The options=object that was passed to the sync-layer, if there was one.","     * @param [e.parsed] {Object} The parsed version of the sync layer's response to the submit-request, if there was a response.","     * @param [e.response] {any} The sync layer's raw, unparsed response to the submit-request, if there was one.","     * @since 0.1","    **/","    EVT_SUBMIT = 'submit',","   /**","     * Fired after model is read from the sync layer.","     * @event load","     * @param e {EventFacade} Event Facade including:","     * @param [e.options] {Object} The options=object that was passed to the sync-layer, if there was one.","     * @param [e.response] {any} The sync layer's raw, unparsed response to the submit-request, if there was one.","     * @since 0.1","    **/","    EVT_LOAD = 'load',","   /**","     * Fired after model is saved through the sync layer.","     * @event submit","     * @param e {EventFacade} Event Facade including:","     * @param [e.options] {Object} The options=object that was passed to the sync-layer, if there was one.","     * @param [e.parsed] {Object} The parsed version of the sync layer's response to the submit-request, if there was a response.","     * @param [e.response] {any} The sync layer's raw, unparsed response to the submit-request, if there was one.","     * @since 0.1","    **/","    EVT_SAVE = 'save',","","    PARSED = function(value) {","        var parsed;","        try {","            parsed = Y.JSON.parse(value);","        } catch (ex) {}","        return parsed;","    };","","    // -- Mixing extra Methods to Y.Model -----------------------------------","","    function ITSAModelSyncPromise() {}","    Y.mix(ITSAModelSyncPromise.prototype, {","       /**","         * Submits this model to the server.","         *","         * This method delegates to the `sync()` method to perform the actual submit","         * operation, which is Y.Promise. Read the Promise.then() and look for resolve(response, options) OR reject(reason).","         *","         * A successful submit-operation will also fire a `submit` event, while an unsuccessful","         * submit operation will fire an `error` event with the `src` value \"submit\".","         *","         * <b>CAUTION</b> The sync-method MUST call its callback-function to make the promised resolved.","         *","         * @method submitPromise","         * @param {Object} [options] Options to be passed to `sync()`. It's up to the custom sync","         *                 implementation to determine what options it supports or requires, if any.","         * @return {Y.Promise} promised response --> resolve(response, options) OR reject(reason).","        **/","        submitPromise: function(options) {","            var instance = this;","","            options = options || {};","            return new Y.Promise(function (resolve, reject) {","                instance.sync('submit', options, function (err, response) {","                    var facade = {","                            options : options,","                            response: response","                        };","                    if (err) {","                        facade.error = err;","                        facade.src   = 'submit';","                        instance.fire(EVT_ERROR, facade);","                        reject(new Error(err));","                    }","                    else {","                        // Lazy publish.","                        if (!instance._submitEvent) {","                            instance._submitEvent = instance.publish(EVT_SUBMIT, {","                                preventable: false","                            });","                        }","                        instance.fire(EVT_SUBMIT, facade);","                        resolve(response, options);","                    }","                });","            });","        },","","","        /**","         * Loads this model from the server.","         *","         * This method delegates to the `sync()` method to perform the actual load","         * operation, which is an asynchronous action. Specify a _callback_ function to","         * be notified of success or failure.","         *","         * A successful load operation will fire a `load` event, while an unsuccessful","         * load operation will fire an `error` event with the `src` value \"load\".","         *","         * If the load operation succeeds and one or more of the loaded attributes","         * differ from this model's current attributes, a `change` event will be fired.","         * @method loadPromise","         * @param {Object} [options] Options to be passed to `sync()`. It's up to the custom sync","         *                 implementation to determine what options it supports or requires, if any.","         * @return {Y.Promise} promised response --> resolve(response, options) OR reject(reason).","        **/","        loadPromise: function (options) {","            var instance = this;","","            options = options || {};","            return new Y.Promise(function (resolve, reject) {","                instance.sync('read', options, function (err, response) {","                    var parsed,","                        facade = {","                            options : options,","                            response: response","                        };","                    if (err) {","                        facade.error = err;","                        facade.src   = 'load';","                        instance.fire(EVT_ERROR, facade);","                        reject(new Error(err));","                    }","                    else {","                        // Lazy publish.","                        if (!instance._loadEvent) {","                            instance._loadEvent = instance.publish(EVT_LOAD, {","                                preventable: false","                            });","                        }","                        parsed = facade.parsed = PARSED(response);","                        instance.setAttrs(parsed, options);","                        instance.changed = {};","                        instance.fire(EVT_LOAD, facade);","                        resolve(response, options);","                    }","                });","            });","        },","","       /**","        * Saves this model to the server.","        *","        * This method delegates to the `sync()` method to perform the actual save","        * operation, which is an asynchronous action. Specify a _callback_ function to","        * be notified of success or failure.","        *","        * A successful save operation will fire a `save` event, while an unsuccessful","        * save operation will fire an `error` event with the `src` value \"save\".","        *","        * If the save operation succeeds and one or more of the attributes returned in","        * the server's response differ from this model's current attributes, a","        * `change` event will be fired.","        *","        * @method savePromise","         * @param {Object} [options] Options to be passed to `sync()`. It's up to the custom sync","         *                 implementation to determine what options it supports or requires, if any.","         * @return {Y.Promise} promised response --> resolve(response, options) OR reject(reason).","        **/","        savePromise: function (options) {","            var instance = this;","","            options = options || {};","            return new Y.Promise(function (resolve, reject) {","                var facade = {","                        options : options,","                        src     :'save'","                    };","                instance._validate(instance.toJSON(), function (validateErr) {","                    if (validateErr) {","                        facade.error = validateErr;","                        instance.fire(EVT_ERROR, facade);","                        reject(new Error(validateErr));","                    }","                    else {","                        instance.sync(instance.isNew() ? 'create' : 'update', options, function (err, response) {","                            var parsed;","                            facade.response = response;","                            if (err) {","                                facade.error = err;","                                facade.src   = 'save';","                                instance.fire(EVT_ERROR, facade);","                                reject(new Error(err));","                            }","                            else {","                                // Lazy publish.","                                if (!instance._saveEvent) {","                                    instance._saveEvent = instance.publish(EVT_SAVE, {","                                        preventable: false","                                    });","                                }","                                parsed = facade.parsed = PARSED(response);","                                instance.setAttrs(parsed, options);","                                instance.changed = {};","                                instance.fire(EVT_SAVE, facade);","                                resolve(response, options);","                            }","                        });","                    }","                });","            });","        },","","      /**","         * Destroys this model instance and removes it from its containing lists, if any.","         *","         * The _callback_, if one is provided, will be called after the model is","         * destroyed.","         *","         * If `options.remove` is `true`, then this method delegates to the `sync()`","         * method to delete the model from the persistence layer, which is an","         * asynchronous action. In this case, the _callback_ (if provided) will be","         * called after the sync layer indicates success or failure of the delete","         * operation.","         *","         * @method destroyPromise","         * @param {Object} [options] Options to be passed to `sync()`. It's up to the custom sync","         *                 implementation to determine what options it supports or requires, if any.","         * @return {Y.Promise} promised response --> resolve(response, options) OR reject(reason).","        **/","        destroyPromise: function (options) {","            var instance = this;","","            options = options || {};","            return new Y.Promise(function (resolve, reject) {","                instance.onceAfter('destroy', function () {","                    function finish() {","                        YArray.each(instance.lists.concat(), function (list) {","                            list.remove(instance, options);","                        });","                    }","                    if (options.remove || options['delete']) {","                        instance.sync('delete', options, function (err) {","                            if (err) {","                                var facade = {","                                    error   : err,","                                    src     : 'destroy',","                                    options : options","                                };","                                instance.fire(EVT_ERROR, facade);","                                reject(new Error(err));","                            }","                            else {","                                finish();","                                resolve(options);","                            }","                        });","                    } else {","                        finish();","                        resolve(options);","                    }","                });","            }).then(","                function() {","                    // if succeeded, destroy the Model's instance","                    Y.Model.superclass.destroy.call(instance);","                }","            );","        }","","    }, true);","","    Y.ITSAModelSyncPromise = ITSAModelSyncPromise;","","    Y.Base.mix(Y.Model, [ITSAModelSyncPromise]);","","}, 'gallery-2013.05.29-23-38', {\"requires\": [\"yui-base\", \"base-base\", \"base-build\", \"node-base\", \"json-parse\", \"promise\", \"model\"]});","","}());"]};
}
var __cov_XDpPLj7Fz_gPyxqtPO4DtQ = __coverage__['build/gallery-itsamodelsyncpromise/gallery-itsamodelsyncpromise.js'];
__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['1']++;YUI.add('gallery-itsamodelsyncpromise',function(Y,NAME){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['1']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['2']++;'use strict';__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['3']++;var YArray=Y.Array,EVT_ERROR='error',EVT_SUBMIT='submit',EVT_LOAD='load',EVT_SAVE='save',PARSED=function(value){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['2']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['4']++;var parsed;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['5']++;try{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['6']++;parsed=Y.JSON.parse(value);}catch(ex){}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['7']++;return parsed;};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['8']++;function ITSAModelSyncPromise(){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['3']++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['9']++;Y.mix(ITSAModelSyncPromise.prototype,{submitPromise:function(options){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['4']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['10']++;var instance=this;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['11']++;options=(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['1'][0]++,options)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['1'][1]++,{});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['12']++;return new Y.Promise(function(resolve,reject){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['5']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['13']++;instance.sync('submit',options,function(err,response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['6']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['14']++;var facade={options:options,response:response};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['15']++;if(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['2'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['16']++;facade.error=err;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['17']++;facade.src='submit';__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['18']++;instance.fire(EVT_ERROR,facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['19']++;reject(new Error(err));}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['2'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['20']++;if(!instance._submitEvent){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['3'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['21']++;instance._submitEvent=instance.publish(EVT_SUBMIT,{preventable:false});}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['3'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['22']++;instance.fire(EVT_SUBMIT,facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['23']++;resolve(response,options);}});});},loadPromise:function(options){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['7']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['24']++;var instance=this;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['25']++;options=(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['4'][0]++,options)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['4'][1]++,{});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['26']++;return new Y.Promise(function(resolve,reject){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['8']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['27']++;instance.sync('read',options,function(err,response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['9']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['28']++;var parsed,facade={options:options,response:response};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['29']++;if(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['5'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['30']++;facade.error=err;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['31']++;facade.src='load';__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['32']++;instance.fire(EVT_ERROR,facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['33']++;reject(new Error(err));}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['5'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['34']++;if(!instance._loadEvent){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['6'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['35']++;instance._loadEvent=instance.publish(EVT_LOAD,{preventable:false});}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['6'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['36']++;parsed=facade.parsed=PARSED(response);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['37']++;instance.setAttrs(parsed,options);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['38']++;instance.changed={};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['39']++;instance.fire(EVT_LOAD,facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['40']++;resolve(response,options);}});});},savePromise:function(options){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['10']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['41']++;var instance=this;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['42']++;options=(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['7'][0]++,options)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['7'][1]++,{});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['43']++;return new Y.Promise(function(resolve,reject){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['11']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['44']++;var facade={options:options,src:'save'};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['45']++;instance._validate(instance.toJSON(),function(validateErr){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['12']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['46']++;if(validateErr){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['8'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['47']++;facade.error=validateErr;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['48']++;instance.fire(EVT_ERROR,facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['49']++;reject(new Error(validateErr));}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['8'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['50']++;instance.sync(instance.isNew()?(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['9'][0]++,'create'):(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['9'][1]++,'update'),options,function(err,response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['13']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['51']++;var parsed;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['52']++;facade.response=response;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['53']++;if(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['10'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['54']++;facade.error=err;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['55']++;facade.src='save';__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['56']++;instance.fire(EVT_ERROR,facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['57']++;reject(new Error(err));}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['10'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['58']++;if(!instance._saveEvent){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['11'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['59']++;instance._saveEvent=instance.publish(EVT_SAVE,{preventable:false});}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['11'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['60']++;parsed=facade.parsed=PARSED(response);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['61']++;instance.setAttrs(parsed,options);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['62']++;instance.changed={};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['63']++;instance.fire(EVT_SAVE,facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['64']++;resolve(response,options);}});}});});},destroyPromise:function(options){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['14']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['65']++;var instance=this;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['66']++;options=(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['12'][0]++,options)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['12'][1]++,{});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['67']++;return new Y.Promise(function(resolve,reject){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['15']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['68']++;instance.onceAfter('destroy',function(){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['16']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['69']++;function finish(){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['17']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['70']++;YArray.each(instance.lists.concat(),function(list){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['18']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['71']++;list.remove(instance,options);});}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['72']++;if((__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['14'][0]++,options.remove)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['14'][1]++,options['delete'])){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['13'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['73']++;instance.sync('delete',options,function(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['19']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['74']++;if(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['15'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['75']++;var facade={error:err,src:'destroy',options:options};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['76']++;instance.fire(EVT_ERROR,facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['77']++;reject(new Error(err));}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['15'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['78']++;finish();__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['79']++;resolve(options);}});}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['13'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['80']++;finish();__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['81']++;resolve(options);}});}).then(function(){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['20']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['82']++;Y.Model.superclass.destroy.call(instance);});}},true);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['83']++;Y.ITSAModelSyncPromise=ITSAModelSyncPromise;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['84']++;Y.Base.mix(Y.Model,[ITSAModelSyncPromise]);},'gallery-2013.05.29-23-38',{'requires':['yui-base','base-base','base-build','node-base','json-parse','promise','model']});
